load("@rules_rust//rust:defs.bzl", "rust_binary")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load")
load("@aspect_bazel_lib//lib:transitions.bzl", "platform_transition_binary")


rust_binary(
    name = "api",
    srcs = ["src/main.rs"],
    deps = [
        # External crates
        "@crates//:serde",
        "@crates//:serde_json"
    ],
    visibility = ["//visibility:public"]
)

# Necessary to cross-compile into linux
platform_transition_binary(
    name = "api_linux_x86",
    binary = ":api",
    target_platform = "//platforms:linux_x86_64_musl",
)


pkg_tar(
    name = "api_bin_layer",
    srcs = [":api_linux_x86"],
    extension = "tar.gz",
)

# Step 3: Build image and add built layer to it
oci_image(
    name = "image",
    base = "@alpine",
    tars = [":api_bin_layer"],
    entrypoint = ["/api"]
)

oci_load(
    name = "load_image",
    image = ":image",
    repo_tags = ["firmware-api:latest"],
    visibility = ["//visibility:public"]
)