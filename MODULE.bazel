bazel_dep(name = "aspect_bazel_lib", version = "2.16.0")
bazel_dep(name = "rules_oci", version = "2.2.6")
bazel_dep(name = "rules_scala", version = "7.0.0")
bazel_dep(name = "rules_jvm_external", version = "6.7")
bazel_dep(name = "rules_rust", version = "0.61.0")


## OCI images

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "eclipse_temurin_jre_21",
    image = "docker.io/library/eclipse-temurin",
    tag = "21-jre-alpine-3.21",
    platforms = ["linux/amd64", "linux/arm64/v8"],
)
use_repo(oci, "eclipse_temurin_jre_21","eclipse_temurin_jre_21_linux_amd64", "eclipse_temurin_jre_21_linux_arm64_v8")

## Rust
rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2024",
    versions = [ "1.85.0" ],
)

## Scala

scala_deps = use_extension(
    "@rules_scala//scala/extensions:deps.bzl",
    "scala_deps",
)
scala_deps.settings(
    fetch_sources = True,
)
scala_deps.scala()
scala_deps.junit()

scala_config = use_extension(
    "@rules_scala//scala/extensions:config.bzl",
    "scala_config",
)
scala_config.settings(
    scala_version = "3.7.0",
)

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")

maven.install(
    artifacts = [
        "dev.zio:zio_3:2.1.18",
        "dev.zio:zio-test-junit_3:2.1.18"
    ],
    repositories = [
        "https://repo1.maven.org/maven2",
    ],
    strict_visibility = True
)

use_repo(maven, "maven")
use_repo(scala_deps, "rules_scala_toolchains")

register_toolchains("//toolchains:custom_scala_toolchain")

