load("@rules_scala//scala:scala.bzl", "scala_binary", "scala_junit_test")
load("@rules_jvm_external//:defs.bzl", "artifact")
load("@aspect_bazel_lib//lib:tar.bzl", "tar")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load")


scala_binary(
    name = "api",
    srcs = glob(["src/main/scala/**/*.scala"]),
    main_class = "vectos.Main",
    deps = [
        artifact("org.http4s:http4s-ember-server_3:0.23.30"),
        artifact("dev.zio:zio_3"),
        artifact("org.tpolecat:skunk-core_3"),
        artifact("com.softwaremill.sttp.tapir:tapir-http4s-server-zio_3"),
        artifact("com.softwaremill.sttp.tapir:tapir-json-zio_3"),
        artifact("com.softwaremill.sttp.tapir:tapir-swagger-ui-bundle_3"),
        artifact("dev.zio:zio-json_3"),
        artifact("dev.zio:zio-config_3"),
        artifact("dev.zio:zio-config-magnolia_3"),
        artifact("org.tpolecat:natchez-core_3"),
        artifact("org.tpolecat:natchez-noop_3"),
        artifact("dev.zio:zio-interop-cats_3"),
    ],
    visibility = ["//visibility:public"]
)
### Testing

scala_junit_test(
    name = "test",
    srcs = glob(["src/test/scala/**/*.scala"]),
    deps = [
        ":api",
        artifact("dev.zio:zio-test-junit_3"),
        # Add any test-specific dependencies for http/db testing if needed later
    ],
    suffixes = ["Test", "Spec"],
    visibility = ["//visibility:public"]
)

### Packaging

tar(
    name = "layer",
    srcs = [":api_deploy.jar"]
)

oci_image(
    name = "image",
    base = "@eclipse_temurin_jre_21",
    entrypoint = ["java", "-jar", "backend/api_deploy.jar"],
    tars = [":layer"],
)

oci_load(
    name = "load_image",
    image = ":image",
    repo_tags = ["bazel-api:latest"],
    visibility = ["//visibility:public"]
)
